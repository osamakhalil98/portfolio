{"version":3,"sources":["webpack://portfolio/./src/pages/Experiences.module.css","webpack://portfolio/./src/pages/Experiences.js"],"names":["ExperiencesCard","experienceName","experienceDesc","experienceDate","filters","ExperiencesContent","expHeader","useState","MyExperiences","filtered","setFiltered","handleFilter","type","filter","ex","console","log","className","styles","style","textAlign","fontWeight","role","onClick","map","key","id","urlPic","picture","height","objectFit","backgroundRepeat","backgroundSize","backgroundPosition","paddingLeft","paddingRight","lineHeight","fontSize","overflow","backgroundImage","name","desc","date"],"mappings":"iXACWA,EAAkB,6CAClBC,EAAiB,4CACjBC,EAAiB,4CACjBC,EAAiB,4CAEjBC,EAAU,qCACVC,EAAqB,gDAWrBC,EAAY,uC,4uFCsFvB,EAnGoB,WAAO,IAAD,GACQC,eAAS,OAAIC,IAAtCC,EADiB,KACPC,EADO,KAmBlBC,EAAe,SAACC,GACpB,GAAa,QAATA,EACFF,GAAY,OAAIF,QACX,CACL,IAAIK,EAASL,UAAqB,SAACM,GAAD,OAAQA,EAAGF,OAASA,KACtDG,QAAQC,IAAIH,GACZH,GAAY,OAAIG,MAIpB,OADAE,QAAQC,IAAIP,GAEV,gCACE,gBAAC,UAAD,MACA,uBAAKQ,UAAcC,qBAAL,SACZ,sBACEC,MAAO,CAAEC,UAAW,SAAUC,WAAY,QAC1CJ,UAAWC,GAFb,yBAMA,uBAAKD,UAAcC,EAAL,UACZ,0BACE,sBACED,UAAU,mCACVK,KAAK,SACLC,QAAS,kBAAMZ,EAAa,SAH9B,QAOA,sBACEM,UAAU,kCACVK,KAAK,SACLC,QAAS,kBAAMZ,EAAa,WAH9B,UAOA,sBACEM,UAAU,gCACVK,KAAK,SACLC,QAAS,kBAAMZ,EAAa,YAH9B,WAOA,sBACEM,UAAU,mCACVK,KAAK,SACLC,QAAS,kBAAMZ,EAAa,SAH9B,QAOA,sBACEM,UAAU,gCACVK,KAAK,SACLC,QAAS,kBAAMZ,EAAa,kBAH9B,mBASJ,uBACEM,UAAcC,EAAL,6BAERT,EAASe,KAAI,SAACV,GAAD,OACZ,uBACEG,UAAcC,EAAL,uDAETO,IAAKX,EAAGY,IAER,uBAAKP,OApFQQ,EAoFeb,EAAGc,QApFN,CACnCV,OAAQ,CACNW,OAAQ,QACRC,UAAW,QACXC,iBAAkB,YAClBC,eAAgB,QAChBC,mBAAoB,gBACpBC,YAAa,MACbC,aAAc,MACdC,WAAY,YACZC,SAAU,WACVC,SAAU,SACVC,gBAAgB,OAAQZ,EAAT,OAwEiCT,SACxC,sBAAID,UAAWC,GAAwBJ,EAAG0B,MAC1C,qBAAGvB,UAAWC,GAAwBJ,EAAG2B,MACzC,qBAAGxB,UAAWC,GAAwBJ,EAAG4B,OAvF7B,IAACf","file":"component---src-pages-experiences-js-2d7ae85acb6f14e06869.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport var ExperiencesCard = \"Experiences-module--ExperiencesCard--1896X\";\nexport var experienceName = \"Experiences-module--experienceName--2sJ0P\";\nexport var experienceDesc = \"Experiences-module--experienceDesc--1KXpx\";\nexport var experienceDate = \"Experiences-module--experienceDate--1XZ35\";\nexport var textHighLight = \"Experiences-module--textHighLight--3JE0E\";\nexport var filters = \"Experiences-module--filters--2UMUD\";\nexport var ExperiencesContent = \"Experiences-module--ExperiencesContent--185OY\";\nexport var logoDiv = \"Experiences-module--logoDiv--2LdO-\";\nexport var majalDiv = \"Experiences-module--majalDiv--2YTq9\";\nexport var ancStyle = \"Experiences-module--ancStyle--2LRUF\";\nexport var ecpcDiv = \"Experiences-module--ecpcDiv--3ztUq\";\nexport var dottedBorderBlue = \"Experiences-module--dottedBorderBlue--10E-_\";\nexport var dottedBorderYellow = \"Experiences-module--dottedBorderYellow--3vdZT\";\nexport var dottedBorderRed = \"Experiences-module--dottedBorderRed--1IwKt\";\nexport var itraxInfo = \"Experiences-module--itraxInfo--3JLBv\";\nexport var ExperiencesContent2 = \"Experiences-module--ExperiencesContent2--VaA-6\";\nexport var ExperiencesCard2 = \"Experiences-module--ExperiencesCard2--19uIs\";\nexport var expHeader = \"Experiences-module--expHeader--WuGjD\";\nexport var noShadow = \"Experiences-module--noShadow--3Ubzo\";","import React, { useState, useEffect } from \"react\";\r\nimport * as styles from \"./Experiences.module.css\";\r\nimport Nav from \"./TopNav\";\r\nimport MyExperiences from \"../../data/experiences.json\";\r\n\r\nconst Experiences = () => {\r\n  const [filtered, setFiltered] = useState([...MyExperiences]);\r\n\r\n  const exPictureStyles = (urlPic) => ({\r\n    styles: {\r\n      height: \"200px\",\r\n      objectFit: \"cover\",\r\n      backgroundRepeat: \"no-repeat\",\r\n      backgroundSize: \"cover\",\r\n      backgroundPosition: \"center center\",\r\n      paddingLeft: \"0px\",\r\n      paddingRight: \"0px\",\r\n      lineHeight: \"1.7777778\",\r\n      fontSize: \"1.125rem\",\r\n      overflow: \"hidden\",\r\n      backgroundImage: `url(${urlPic})`,\r\n    },\r\n  });\r\n\r\n  const handleFilter = (type) => {\r\n    if (type === \"all\") {\r\n      setFiltered([...MyExperiences]);\r\n    } else {\r\n      let filter = MyExperiences.filter((ex) => ex.type === type);\r\n      console.log(filter);\r\n      setFiltered([...filter]);\r\n    }\r\n  };\r\n  console.log(filtered);\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <div className={`${styles.ExperiencesWrapper} mt-4`}>\r\n        <h1\r\n          style={{ textAlign: \"center\", fontWeight: \"bold\" }}\r\n          className={styles.expHeader}\r\n        >\r\n          My Experiences So Far\r\n        </h1>\r\n        <div className={`${styles.filters} mt-4 `}>\r\n          <ul>\r\n            <li\r\n              className=\"list-inline-item btn btn-success\"\r\n              role=\"button\"\r\n              onClick={() => handleFilter(\"all\")}\r\n            >\r\n              #All\r\n            </li>\r\n            <li\r\n              className=\"list-inline-item btn btn-danger\"\r\n              role=\"button\"\r\n              onClick={() => handleFilter(\"event\")}\r\n            >\r\n              #event\r\n            </li>\r\n            <li\r\n              className=\"list-inline-item btn btn-info\"\r\n              role=\"button\"\r\n              onClick={() => handleFilter(\"intern\")}\r\n            >\r\n              #intern\r\n            </li>\r\n            <li\r\n              className=\"list-inline-item btn btn-warning\"\r\n              role=\"button\"\r\n              onClick={() => handleFilter(\"job\")}\r\n            >\r\n              #job\r\n            </li>\r\n            <li\r\n              className=\"list-inline-item btn btn-dark\"\r\n              role=\"button\"\r\n              onClick={() => handleFilter(\"call of duty\")}\r\n            >\r\n              #call of duty\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div\r\n          className={`${styles.ExperiencesContent} col-xl-12 pb-2 mb-4 mt-4`}\r\n        >\r\n          {filtered.map((ex) => (\r\n            <div\r\n              className={`${styles.ExperiencesCard} mt-4  col-lg-4 col-md-6 col-sm-6 \r\n        col-xs-3`}\r\n              key={ex.id}\r\n            >\r\n              <div style={exPictureStyles(ex.picture).styles}></div>\r\n              <h2 className={styles.experienceName}>{ex.name}</h2>\r\n              <p className={styles.experienceDesc}>{ex.desc}</p>\r\n              <p className={styles.experienceDate}>{ex.date}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Experiences;\r\n"],"sourceRoot":""}